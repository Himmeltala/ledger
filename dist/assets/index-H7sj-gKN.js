var l;(s=>{s.DB_RECORD="db_record",s.DB_TALLYPAD="db_tallypad",s.DB_COMMENTS="db_comments",s.DB_CONFIG="db_config",s.DB_KEY_CONFIG="0",s.DB_KEY_COMMENTS="0"})(l||(l={}));var m;(s=>{function p(){const c=new Promise((n,e)=>{const r=indexedDB.open(l.DB_TALLYPAD);r.onsuccess=function(o){const t=o.target.result;n(t)},r.onerror=function(){e(new Error("创建数据库失败！"))},r.onupgradeneeded=function(o){const t=o.target.result,u=t.createObjectStore(l.DB_RECORD,{keyPath:"id"}),d=t.createObjectStore(l.DB_COMMENTS,{keyPath:"id"}),i=t.createObjectStore(l.DB_CONFIG,{keyPath:"id"});u.add({id:"2024",items:{1:{balance:[],surplus:0,budget:0}}}),d.add({id:l.DB_KEY_COMMENTS,items:[{value:"生活费",cost:1800,type:"支"}]}),i.add({id:l.DB_KEY_CONFIG,Y:"2024",M:"1",budget:5e3,isChart:!0})}});return c.catch(n=>{console.error(n)}),c}s.create=p;function _(c,n,e,r){const o=new Promise((t,u)=>{const a=c.transaction([n],"readwrite").objectStore(n).add(e,r);a.onsuccess=function(){t(c)},a.onerror=function(){u(new Error("插入数据错误！"))}});return o.catch(t=>{console.error(t)}),o}s.add=_;function w(c,n,e){const r=new Promise((o,t)=>{const i=c.transaction([n],"readwrite").objectStore(n).delete(e);i.onsuccess=function(){o(c)},i.onerror=function(){t(new Error("删除数据错误！"))}});return r.catch(o=>{console.error(o)}),r}s.drop=w;function g(c,n,e,r){const o=new Promise((t,u)=>{const i=c.transaction([n],"readwrite").objectStore(n),a=i.get(r);a.onsuccess=function(){i.put(e).onsuccess=function(){t(c)}},a.onerror=function(){u(new Error("更新数据错误！"))}});return o.catch(t=>{console.error(t)}),o}s.put=g;function E(c,n,e){const r=new Promise((o,t)=>{const d=c.transaction([n],"readwrite").objectStore(n);if(e){const i=d.get(e);i.onsuccess=function(){const a=i.result;o(a||null)},i.onerror=function(){t(null)}}else{const i=d.openCursor(),a=[];i.onsuccess=function(P){const f=P.target.result;f?(a.push(f.value),f.continue()):o(a)},i.onerror=function(){t(null)}}});return r.catch(o=>{console.error(o)}),r}s.get=E;function B(c,n){const e=new Promise((r,o)=>{const u=c.transaction([n],"readonly").objectStore(n).getAllKeys();u.onsuccess=function(d){r(d.target.result)},u.onerror=function(){o(null)}});return e.catch(r=>{console.error(r)}),e}s.keys=B;function D(c){const n=new Promise((e,r)=>{const o=indexedDB.deleteDatabase(c);o.onsuccess=function(){e(null)},o.onerror=function(){r(null)},o.onblocked=function(){r(null)}});return n.catch(e=>{console.error(e)}),n}s.del=D;function S(c,n){return new Promise((e,r)=>{const u=c.transaction([n],"readwrite").objectStore(n).clear();u.onsuccess=function(){e("")},u.onerror=function(){r("")}})}s.clear=S;function O(c,n,e){const t=c.transaction([e],"readwrite").objectStore(e).add(n);t.onsuccess=function(){console.log("Data added: ",n)},t.onerror=function(){console.error("Error adding data: ")}}s.leadIn=O})(m||(m={}));export{l as C,m as D};
